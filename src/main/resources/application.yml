security:
  allowed-origins: ${ALLOWED_ORIGINS:http://localhost:8080,http://localhost:3000,http://localhost:4200}

cronjob:
  tokenrefresh: 0 0/15 * * * ?

spring:
  rabbitmq:
    listener:
      simple:
        auto-startup: ${RABBIT_MQ_AUTO_STARTUP:false}

    host: ${RABBIT_MQ_HOST:localhost}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBIT_MQ_USERNAME:guest}
    password: ${RABBIT_MQ_PASSWORD:guest}

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://login.eveonline.com

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_URL:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:uselessDB}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true
        boot:
          allow_jdbc_metadata_access: false
    database: postgresql
    generate-ddl: false
    show-sql: true
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.xml
    contexts: prod
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:password}

eve-sso:
  clientId: ${EVE_SSO_CLIENT_ID:}
  secret: ${EVE_SSO_SECRET:}
  callback: ${EVE_SSO_CALLBACK:}
  issuerUri: https://login.eveonline.com
